"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/deals";
exports.ids = ["pages/api/deals"];
exports.modules = {

/***/ "(api-node)/./lib/db.js":
/*!*******************!*\
  !*** ./lib/db.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pool: () => (/* binding */ pool),\n/* harmony export */   query: () => (/* binding */ query)\n/* harmony export */ });\n// lib/db.js\n// Initialize query and pool as null\nlet pool = null;\nlet query = null;\n// Only run this code on the server\nif (true) {\n    try {\n        // Server-side code - import pg using require to avoid webpack issues\n        const { Pool } = __webpack_require__(/*! pg */ \"pg\");\n        // Create a database connection pool\n        pool =  false ? 0 : new Pool({\n            user: process.env.DB_USER || 'postgres',\n            host: process.env.DB_HOST || 'localhost',\n            database: process.env.DB_NAME || 'innvestai',\n            password: process.env.DB_PASSWORD || 'Temp@123',\n            port: parseInt(process.env.DB_PORT || '5432')\n        });\n        // Define the query function\n        query = async (text, params)=>{\n            try {\n                const start = Date.now();\n                const res = await pool.query(text, params);\n                const duration = Date.now() - start;\n                // Log query performance in development\n                if (true) {\n                    console.log('Executed query', {\n                        text,\n                        duration,\n                        rows: res.rowCount\n                    });\n                }\n                return res;\n            } catch (error) {\n                console.error('Database query error:', error);\n                throw error;\n            }\n        };\n        // Setup event handlers for the pool\n        pool.on('error', (err)=>{\n            console.error('Unexpected database error:', err);\n        // Don't crash the server on connection errors\n        });\n        console.log('Database module initialized on server');\n    } catch (error) {\n        console.error('Failed to initialize database module:', error);\n        // Create non-functional stubs if initialization fails\n        pool = {\n            query: ()=>{\n                throw new Error('Database pool not initialized');\n            },\n            on: ()=>{}\n        };\n        query = async ()=>{\n            throw new Error('Database query function not initialized');\n        };\n    }\n} else {}\n// Choose one export style based on the environment\n// Use ES modules export style since that's what the rest of your code uses\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9kYi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLFlBQVk7QUFFWixvQ0FBb0M7QUFDcEMsSUFBSUEsT0FBTztBQUNYLElBQUlDLFFBQVE7QUFFWixtQ0FBbUM7QUFDbkMsSUFBSSxJQUE2QixFQUFFO0lBQ2pDLElBQUk7UUFDRixxRUFBcUU7UUFDckUsTUFBTSxFQUFFQyxJQUFJLEVBQUUsR0FBR0MsbUJBQU9BLENBQUMsY0FBSTtRQUU3QixvQ0FBb0M7UUFDcENILE9BQU9JLE1BQXFDLEdBQ3hDLENBS0UsR0FDRixJQUFJRixLQUFLO1lBQ1BRLE1BQU1OLFFBQVFFLEdBQUcsQ0FBQ0ssT0FBTyxJQUFJO1lBQzdCQyxNQUFNUixRQUFRRSxHQUFHLENBQUNPLE9BQU8sSUFBSTtZQUM3QkMsVUFBVVYsUUFBUUUsR0FBRyxDQUFDUyxPQUFPLElBQUk7WUFDakNDLFVBQVVaLFFBQVFFLEdBQUcsQ0FBQ1csV0FBVyxJQUFJO1lBQ3JDQyxNQUFNQyxTQUFTZixRQUFRRSxHQUFHLENBQUNjLE9BQU8sSUFBSTtRQUN4QztRQUVKLDRCQUE0QjtRQUM1Qm5CLFFBQVEsT0FBT29CLE1BQU1DO1lBQ25CLElBQUk7Z0JBQ0YsTUFBTUMsUUFBUUMsS0FBS0MsR0FBRztnQkFDdEIsTUFBTUMsTUFBTSxNQUFNMUIsS0FBS0MsS0FBSyxDQUFDb0IsTUFBTUM7Z0JBQ25DLE1BQU1LLFdBQVdILEtBQUtDLEdBQUcsS0FBS0Y7Z0JBRTlCLHVDQUF1QztnQkFDdkMsSUFBSW5CLElBQXFDLEVBQUU7b0JBQ3pDd0IsUUFBUUMsR0FBRyxDQUFDLGtCQUFrQjt3QkFBRVI7d0JBQU1NO3dCQUFVRyxNQUFNSixJQUFJSyxRQUFRO29CQUFDO2dCQUNyRTtnQkFFQSxPQUFPTDtZQUNULEVBQUUsT0FBT00sT0FBTztnQkFDZEosUUFBUUksS0FBSyxDQUFDLHlCQUF5QkE7Z0JBQ3ZDLE1BQU1BO1lBQ1I7UUFDRjtRQUVBLG9DQUFvQztRQUNwQ2hDLEtBQUtpQyxFQUFFLENBQUMsU0FBUyxDQUFDQztZQUNoQk4sUUFBUUksS0FBSyxDQUFDLDhCQUE4QkU7UUFDNUMsOENBQThDO1FBQ2hEO1FBRUFOLFFBQVFDLEdBQUcsQ0FBQztJQUNkLEVBQUUsT0FBT0csT0FBTztRQUNkSixRQUFRSSxLQUFLLENBQUMseUNBQXlDQTtRQUV2RCxzREFBc0Q7UUFDdERoQyxPQUFPO1lBQ0xDLE9BQU87Z0JBQVEsTUFBTSxJQUFJa0MsTUFBTTtZQUFrQztZQUNqRUYsSUFBSSxLQUFPO1FBQ2I7UUFFQWhDLFFBQVE7WUFBYyxNQUFNLElBQUlrQyxNQUFNO1FBQTRDO0lBQ3BGO0FBQ0YsT0FBTyxFQVlOO0FBRUQsbURBQW1EO0FBQ25ELDJFQUEyRTtBQUNwRCIsInNvdXJjZXMiOlsiQzpcXHZpbm9kXFxwcm9qZWN0c1xcaW5udmVzdFxcUE9DXFxpbm52ZXN0YWlcXGxpYlxcZGIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL2RiLmpzXHJcblxyXG4vLyBJbml0aWFsaXplIHF1ZXJ5IGFuZCBwb29sIGFzIG51bGxcclxubGV0IHBvb2wgPSBudWxsO1xyXG5sZXQgcXVlcnkgPSBudWxsO1xyXG5cclxuLy8gT25seSBydW4gdGhpcyBjb2RlIG9uIHRoZSBzZXJ2ZXJcclxuaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFNlcnZlci1zaWRlIGNvZGUgLSBpbXBvcnQgcGcgdXNpbmcgcmVxdWlyZSB0byBhdm9pZCB3ZWJwYWNrIGlzc3Vlc1xyXG4gICAgY29uc3QgeyBQb29sIH0gPSByZXF1aXJlKCdwZycpO1xyXG5cclxuICAgIC8vIENyZWF0ZSBhIGRhdGFiYXNlIGNvbm5lY3Rpb24gcG9vbFxyXG4gICAgcG9vbCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgXHJcbiAgICAgID8gbmV3IFBvb2woe1xyXG4gICAgICAgICAgY29ubmVjdGlvblN0cmluZzogcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMLFxyXG4gICAgICAgICAgc3NsOiB7XHJcbiAgICAgICAgICAgIHJlamVjdFVuYXV0aG9yaXplZDogZmFsc2VcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICA6IG5ldyBQb29sKHtcclxuICAgICAgICAgIHVzZXI6IHByb2Nlc3MuZW52LkRCX1VTRVIgfHwgJ3Bvc3RncmVzJyxcclxuICAgICAgICAgIGhvc3Q6IHByb2Nlc3MuZW52LkRCX0hPU1QgfHwgJ2xvY2FsaG9zdCcsXHJcbiAgICAgICAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREJfTkFNRSB8fCAnaW5udmVzdGFpJywgLy8gVXNlIGJ1aWx0LWluIHBvc3RncmVzIGRhdGFiYXNlXHJcbiAgICAgICAgICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuREJfUEFTU1dPUkQgfHwgJ1RlbXBAMTIzJyxcclxuICAgICAgICAgIHBvcnQ6IHBhcnNlSW50KHByb2Nlc3MuZW52LkRCX1BPUlQgfHwgJzU0MzInKSxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAvLyBEZWZpbmUgdGhlIHF1ZXJ5IGZ1bmN0aW9uXHJcbiAgICBxdWVyeSA9IGFzeW5jICh0ZXh0LCBwYXJhbXMpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBzdGFydCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgcG9vbC5xdWVyeSh0ZXh0LCBwYXJhbXMpO1xyXG4gICAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0O1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIExvZyBxdWVyeSBwZXJmb3JtYW5jZSBpbiBkZXZlbG9wbWVudFxyXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnRXhlY3V0ZWQgcXVlcnknLCB7IHRleHQsIGR1cmF0aW9uLCByb3dzOiByZXMucm93Q291bnQgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiByZXM7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgcXVlcnkgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIFNldHVwIGV2ZW50IGhhbmRsZXJzIGZvciB0aGUgcG9vbFxyXG4gICAgcG9vbC5vbignZXJyb3InLCAoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuZXhwZWN0ZWQgZGF0YWJhc2UgZXJyb3I6JywgZXJyKTtcclxuICAgICAgLy8gRG9uJ3QgY3Jhc2ggdGhlIHNlcnZlciBvbiBjb25uZWN0aW9uIGVycm9yc1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIG1vZHVsZSBpbml0aWFsaXplZCBvbiBzZXJ2ZXInKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGluaXRpYWxpemUgZGF0YWJhc2UgbW9kdWxlOicsIGVycm9yKTtcclxuICAgIFxyXG4gICAgLy8gQ3JlYXRlIG5vbi1mdW5jdGlvbmFsIHN0dWJzIGlmIGluaXRpYWxpemF0aW9uIGZhaWxzXHJcbiAgICBwb29sID0ge1xyXG4gICAgICBxdWVyeTogKCkgPT4geyB0aHJvdyBuZXcgRXJyb3IoJ0RhdGFiYXNlIHBvb2wgbm90IGluaXRpYWxpemVkJyk7IH0sXHJcbiAgICAgIG9uOiAoKSA9PiB7fVxyXG4gICAgfTtcclxuXHJcbiAgICBxdWVyeSA9IGFzeW5jICgpID0+IHsgdGhyb3cgbmV3IEVycm9yKCdEYXRhYmFzZSBxdWVyeSBmdW5jdGlvbiBub3QgaW5pdGlhbGl6ZWQnKTsgfTtcclxuICB9XHJcbn0gZWxzZSB7XHJcbiAgLy8gQ2xpZW50LXNpZGUgbW9jayBpbXBsZW1lbnRhdGlvblxyXG4gIHF1ZXJ5ID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdEYXRhYmFzZSBxdWVyaWVzIGNhbm5vdCBiZSBleGVjdXRlZCBvbiB0aGUgY2xpZW50IHNpZGUnKTtcclxuICB9O1xyXG4gIFxyXG4gIHBvb2wgPSB7XHJcbiAgICBxdWVyeTogKCkgPT4ge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0RhdGFiYXNlIHF1ZXJpZXMgY2Fubm90IGJlIGV4ZWN1dGVkIG9uIHRoZSBjbGllbnQgc2lkZScpO1xyXG4gICAgfSxcclxuICAgIG9uOiAoKSA9PiB7fVxyXG4gIH07XHJcbn1cclxuXHJcbi8vIENob29zZSBvbmUgZXhwb3J0IHN0eWxlIGJhc2VkIG9uIHRoZSBlbnZpcm9ubWVudFxyXG4vLyBVc2UgRVMgbW9kdWxlcyBleHBvcnQgc3R5bGUgc2luY2UgdGhhdCdzIHdoYXQgdGhlIHJlc3Qgb2YgeW91ciBjb2RlIHVzZXNcclxuZXhwb3J0IHsgcXVlcnksIHBvb2wgfTsiXSwibmFtZXMiOlsicG9vbCIsInF1ZXJ5IiwiUG9vbCIsInJlcXVpcmUiLCJwcm9jZXNzIiwiY29ubmVjdGlvblN0cmluZyIsImVudiIsIkRBVEFCQVNFX1VSTCIsInNzbCIsInJlamVjdFVuYXV0aG9yaXplZCIsInVzZXIiLCJEQl9VU0VSIiwiaG9zdCIsIkRCX0hPU1QiLCJkYXRhYmFzZSIsIkRCX05BTUUiLCJwYXNzd29yZCIsIkRCX1BBU1NXT1JEIiwicG9ydCIsInBhcnNlSW50IiwiREJfUE9SVCIsInRleHQiLCJwYXJhbXMiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJyZXMiLCJkdXJhdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJyb3dzIiwicm93Q291bnQiLCJlcnJvciIsIm9uIiwiZXJyIiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./lib/db.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdeals&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdeals%5Cindex.js&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdeals&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdeals%5Cindex.js&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_deals_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\deals\\index.js */ \"(api-node)/./pages/api/deals/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_deals_index_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_deals_index_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/deals\",\n        pathname: \"/api/deals\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_deals_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGZGVhbHMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q2RlYWxzJTVDaW5kZXguanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDMEQ7QUFDMUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHNEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxzREFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxkZWFsc1xcXFxpbmRleC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZGVhbHNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kZWFsc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdeals&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdeals%5Cindex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/deals/index.js":
/*!**********************************!*\
  !*** ./pages/api/deals/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/db */ \"(api-node)/./lib/db.js\");\n// pages/api/deals/index.js\n\nasync function handler(req, res) {\n    switch(req.method){\n        case 'GET':\n            try {\n                // Get all deals with optional filtering\n                const { limit = 10, offset = 0, sortBy = 'created_at', order = 'DESC' } = req.query;\n                // First, check the structure of the deals table\n                const tableInfoQuery = `\n          SELECT column_name \n          FROM information_schema.columns \n          WHERE table_schema = 'public' \n          AND table_name = 'deals';\n        `;\n                const tableInfo = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(tableInfoQuery);\n                const dealColumns = tableInfo.rows.map((row)=>row.column_name);\n                console.log('Deal table columns:', dealColumns);\n                // Get the deal ID column name (deal_id or id)\n                const dealIdColumn = dealColumns.find((col)=>col === 'deal_id' || col === 'id') || 'id';\n                // Check if property_id exists in deals\n                const hasPropertyId = dealColumns.includes('property_id');\n                // Get all deals\n                let dealsQuery;\n                if (hasPropertyId) {\n                    // Attempt a simple query first to see if it works\n                    dealsQuery = `\n            SELECT * FROM deals\n            ORDER BY ${dealColumns.includes('created_at') ? 'created_at' : dealIdColumn} ${order === 'ASC' ? 'ASC' : 'DESC'}\n            LIMIT $1 OFFSET $2\n          `;\n                } else {\n                    // If no property_id, just get deals without trying to join\n                    dealsQuery = `\n            SELECT * FROM deals\n            ORDER BY ${dealColumns.includes('created_at') ? 'created_at' : dealIdColumn} ${order === 'ASC' ? 'ASC' : 'DESC'}\n            LIMIT $1 OFFSET $2\n          `;\n                }\n                const countQuery = `SELECT COUNT(*) FROM deals`;\n                const [dealsResult, countResult] = await Promise.all([\n                    (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(dealsQuery, [\n                        limit,\n                        offset\n                    ]),\n                    (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(countQuery)\n                ]);\n                // If we have deals and property_id exists, try to get property details\n                const deals = [\n                    ...dealsResult.rows\n                ];\n                // This is just the part of the code that needs to be fixed in pages/api/deals/index.js\n                // When enhancing each deal with property info in the GET handler:\n                if (deals.length > 0 && hasPropertyId) {\n                    // Try to enhance deals with property info\n                    try {\n                        // First, check if dim_property table exists and get its structure\n                        const propertyInfoQuery = `\n      SELECT column_name \n      FROM information_schema.columns \n      WHERE table_schema = 'public' \n      AND table_name = 'dim_property';\n    `;\n                        const propertyInfo = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(propertyInfoQuery);\n                        if (propertyInfo.rows.length > 0) {\n                            // Enhance each deal with property info\n                            for(let i = 0; i < deals.length; i++){\n                                const deal = deals[i];\n                                if (deal.property_id) {\n                                    // Use property_key instead of property_id\n                                    const propertyQuery = `\n            SELECT p.*, h.hotel_type_name, m.market_name\n            FROM dim_property p\n            LEFT JOIN dim_hotel_type h ON p.hotel_type_key = h.hotel_type_key\n            LEFT JOIN dim_market m ON p.market_key = m.market_key\n            WHERE p.property_key = $1\n          `;\n                                    try {\n                                        const propertyResult = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(propertyQuery, [\n                                            deal.property_id\n                                        ]);\n                                        const property = propertyResult.rows[0];\n                                        if (property) {\n                                            deals[i] = {\n                                                ...deal,\n                                                property_name: property.property_name,\n                                                hotel_type_name: property.hotel_type_name,\n                                                market_name: property.market_name\n                                            };\n                                        }\n                                    } catch (propError) {\n                                        console.error('Error fetching property for deal:', propError);\n                                    // If property fetch fails, continue with original deal\n                                    }\n                                }\n                            }\n                        }\n                    } catch (enhanceError) {\n                        console.error('Error enhancing deals with property info:', enhanceError);\n                    // Continue with basic deal data\n                    }\n                }\n                res.status(200).json({\n                    deals,\n                    total: parseInt(countResult.rows[0].count),\n                    limit: parseInt(limit),\n                    offset: parseInt(offset)\n                });\n            } catch (error) {\n                console.error('Error executing query:', error);\n                res.status(500).json({\n                    error: 'Failed to retrieve deals',\n                    details: error.message\n                });\n            }\n            break;\n        // pages/api/deals/index.js (POST section updated)\n        case 'POST':\n            try {\n                // Extract form fields from the request\n                const requestBody = req.body;\n                console.log('Request body:', requestBody);\n                // Check the structure of the deals table\n                const tableInfoQuery = `\n      SELECT column_name \n      FROM information_schema.columns \n      WHERE table_schema = 'public' \n      AND table_name = 'deals';\n    `;\n                let tableInfo;\n                try {\n                    tableInfo = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(tableInfoQuery);\n                } catch (error) {\n                    console.log('Error getting table info, deals table might not exist');\n                    // Create a complete deals table with all required fields\n                    const createTableQuery = `\n        CREATE TABLE IF NOT EXISTS deals (\n          id SERIAL PRIMARY KEY,\n          property_id INTEGER,\n          deal_name VARCHAR(255) NOT NULL,\n          investment_amount DECIMAL(15, 2) NOT NULL DEFAULT 1000000,\n          expected_return DECIMAL(6, 2) NOT NULL DEFAULT 8.5,\n          start_date DATE NOT NULL DEFAULT CURRENT_DATE,\n          end_date DATE NOT NULL DEFAULT (CURRENT_DATE + INTERVAL '5 years'),\n          status VARCHAR(50) DEFAULT 'Draft',\n          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n          updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n        );\n      `;\n                    await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(createTableQuery);\n                    console.log('Created deals table with all required columns');\n                    // Get the columns again\n                    tableInfo = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(tableInfoQuery);\n                }\n                const dealColumns = tableInfo.rows.map((row)=>row.column_name);\n                console.log('Deal table columns after check:', dealColumns);\n                // Map property_id if it was sent from the client as property_key\n                let propertyId = requestBody.property_id;\n                // If property_id wasn't sent but property_key was, use that instead\n                if (propertyId === undefined && requestBody.property_key !== undefined) {\n                    propertyId = requestBody.property_key;\n                }\n                // Include the required fields with default values if not provided\n                const dataToInsert = {\n                    deal_name: requestBody.deal_name,\n                    property_id: propertyId || null,\n                    investment_amount: requestBody.investment_amount || 1000000,\n                    expected_return: requestBody.expected_return || 8.5,\n                    start_date: requestBody.start_date || new Date().toISOString().split('T')[0],\n                    end_date: requestBody.end_date || new Date(new Date().setFullYear(new Date().getFullYear() + 5)).toISOString().split('T')[0],\n                    status: requestBody.status || 'Draft'\n                };\n                // Generate the column list and placeholders\n                const columns = [];\n                const values = [];\n                let placeholders = [];\n                // Add fields that exist in the database\n                Object.keys(dataToInsert).forEach((key)=>{\n                    if (dealColumns.includes(key) && dataToInsert[key] !== undefined) {\n                        columns.push(key);\n                        values.push(dataToInsert[key]);\n                        placeholders.push(`$${values.length}`);\n                    }\n                });\n                // Add created_at if in columns\n                if (dealColumns.includes('created_at') && !columns.includes('created_at')) {\n                    columns.push('created_at');\n                    values.push(new Date());\n                    placeholders.push(`$${values.length}`);\n                }\n                console.log('Columns to insert:', columns);\n                console.log('Values to insert:', values);\n                if (columns.length === 0) {\n                    return res.status(400).json({\n                        error: 'No valid deal data provided'\n                    });\n                }\n                const insertQuery = `\n      INSERT INTO deals (${columns.join(', ')})\n      VALUES (${placeholders.join(', ')})\n      RETURNING *\n    `;\n                console.log('Insert query:', insertQuery);\n                const result = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.query)(insertQuery, values);\n                console.log('Insert result:', result.rows[0]);\n                res.status(201).json(result.rows[0]);\n            } catch (error) {\n                console.error('Error creating deal:', error);\n                res.status(500).json({\n                    error: 'Failed to create deal',\n                    details: error.message\n                });\n            }\n            break;\n        default:\n            res.setHeader('Allow', [\n                'GET',\n                'POST'\n            ]);\n            res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/deals/index.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("pg");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdeals&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cdeals%5Cindex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();